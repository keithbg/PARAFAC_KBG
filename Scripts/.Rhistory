file_name <- str_c(sampleID, "-ProcessedContour_IFE_RM_NRM.dat")
write_tsv(eem.df, path= file.path(dir_output_eems, file_name))
}
file <- 1
eem.df <-   read_tsv(file.names[file],
col_types = cols(
ex= col_double(),
em= col_double(),
z= col_double()))
sampleID <- str_replace(list.files(pattern="*-ProcessedContour_IFE_RM_NRM.dat", path= dir_input_eems)[file], "-.+$", "")
gain.info <- sample.list %>%
filter(base_name == sampleID)
eem.df$Newz <- eem.df$z / gain.med.low.ratio
View(eem.df)
library(tidyverse)
library(stringr)
dir_input <- file.path("/Users", "KeithBG", "Documents", "UC Berkeley", "2016 Spring Classes", "EEA_DOC", "Aqualog_EEMs", "Aqualog_Data")
sample.list <- read_tsv(file.path(dir_input, "eem_sample_info.txt"))
sample.list
read_tsv(file.path(dir_input, "eem_sample_info.txt")) %>%
mutate(replicate= str_extract(.$base_name, "[0-9]$"))
sample.list <- read_tsv(file.path(dir_input, "eem_sample_info.txt"))
str_extract(sample.list$base_name, "(?:[A-Z]){1}([A-Z])")
str_extract(sample.list$base_name, "(?:[A-Z].*){1}([A-Z].*)")
str_extract(sample.list$base_name, "(?:[A-Z]){1}([A-Z].*)")
str_extract(sample.list$base_name, "(?:[A-Z]){1}([A-Z].)")
str_extract(sample.list$base_name, "(?:[A-Z]){2}([A-Z].)")
str_extract(sample.list$base_name, "(?:[A-Z]){3}([A-Z].)")
str_extract(sample.list$base_name, "(?:[A-Z]){3}")
str_extract(sample.list$base_name, "(?:[A-Z]){5}")
str_extract(sample.list$base_name, "(?:[A-Z]){2}")
str_extract(sample.list$base_name, "(?:[A-Z]){3}")
str_extract(sample.list$base_name, "(?:[A-Z]){4}")
str_extract(sample.list$base_name, "(?:[A-Z]+){1}([A-Z]+)")
str_extract(sample.list$base_name, "([A-Z]+)([A-Z]+){2}")
sample.list$base_name
str_extract(sample.list$base_name, ".*_.*_([A-Z])_.*")
str_extract(sample.list$base_name, "[^_]*_[^_]*_([^_]*)_[^-]")
str_extract(sample.list$base_name, "[^_]*_[^_]*_([^_]*){3}_[^-]")
gsub(sample.list$base_name, "[^_]*_[^_]*_([^_]*)_[^-]", "")
str_replace(sample.list$base_name, "[^_]*_[^_]*_([^_]*)_[^-]", "")
str_replace(sample.list$base_name, "[^_]*_[^_]*_([^_]*)_[^-]")
str_replace(sample.list$base_name, "[^_]*_[^_]*_([^_]*)_[^-]", "\\1")
str_replace(sample.list$base_name, "[^_]*_[^_]*_([^_]*)_[^-]", "\\2")
str_replace(sample.list$base_name, "[^_]*_[^_]*_([^_]*)_[^-]", "\\1")
/.*/(.*?)/
/[^/]*/([^/]*)/
string = 'X2015.XML.Outgoing.pounds..millions.'
/.*/(.*?)/
/[^/]*/([^/]*)/
string <-  'X2015.XML.Outgoing.pounds..millions.'
str_replace(string, "X([0-9]{4})\..*(millions)", "\\1")
str_replace(string, "X([0-9]{4})\\..*(millions)", "\\1")
str_replace(string, "X([0-9]{4}).*(millions)", "\\1")
str_replace(string, "X([0-9]{4}).*(millions)", "\\2")
sample.list <- read_tsv(file.path(dir_input, "eem_sample_info.txt")) %>%
mutate(replicate= str_extract(.$base_name, "[0-9]$"),
type= str_replace(.$base_name, "[^_]*_[^_]*_([^_]*)_[^-]", "\\1"))
View(sample.list)
sample.lis %>%
filter(type= "SMP")
sample.list %>%
filter(type= "SMP")
sample.list %>%
filter(type== "SMP")
?rbinom
rbinom(1, 0.5)
rbinom(1, 1, 0.5)
rbinom(1, 1, 0.5)
rbinom(10, 1, 0.5)
sum(rbinom(10, 1, 0.5))
sum(rbinom(10, 1, 0.5) == 1)
sum(rbinom(100, 1, 0.5) == 1)
sum(rbinom(1000, 1, 0.5) == 1)
sum(rbinom(10000, 1, 0.5) == 1)
sum(rbinom(100000, 1, 0.5) == 1)
sum(rbinom(100000, 1, 0.5) == 1)
sum(rbinom(100000, 1, 0.5) == 1)
sum(rbinom(100000, 1, 0.5) == 1)
sum(rbinom(100000, 1, 0.5) == 1)
sum(rbinom(100000, 1, 0.5) == 1)
?sample
sample(2, 1)
sample(2, 1)
sample(2, 1)
sample(2, 1)
sample(2, 1)
sample(2, 1)
sample.list %>%
filter(type== "SMP") %>%
mutate(select= sample(2, 1))
test <- sample.list %>%
filter(type== "SMP") %>%
mutate(select= sample(2, 1))
View(test)
test <- sample.list %>%
filter(type== "SMP") %>%
mutate(select= sample(2, 1))
View(test)
sample(2, 1)
sample(1:2, 1)
sample(1:2, 1)
sample(1:5, 3)
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
sample(1:2, 1)
sample(1:2, 1)
sample(1:2, 1)
test <- sample.list %>%
filter(type== "SMP") %>%
mutate(select= sample(1:2, 1))
View(test)
sample(1:2, 1)
sample(1:2, 1)
sample(1:2, 1)
sample(1:2, 1)
rep(sample(1:2, 1), 10)
rep(sample(1:2, 1), 10)
sample.list %>%
filter(type== "SMP") %>%
group_by(base_name)
test <- sample.list %>%
filter(type== "SMP") %>%
group_by(base_name) %>%
mutate(select= sample(1:2, 1))
View(test)
View(test)
rbinom(1, 1, 0.5)
test <- sample.list %>%
filter(type== "SMP") %>%
group_by(base_name) %>%
mutate(select= rbinom(1, 1, 0.5))
View(test)
test <- sample.list %>%
filter(type== "SMP") %>%
#group_by(base_name) %>%
mutate(select= rbinom(1, 1, 0.5))
View(test)
View(test)
str_replace(sample.list$base_name, "([^_]*_[^_]*_[^_]*)_[^-]", "\\1")
sample.list <- read_tsv(file.path(dir_input, "eem_sample_info.txt")) %>%
mutate(replicate= str_extract(.$base_name, "[0-9]$"),
type= str_replace(.$base_name, "[^_]*_[^_]*_([^_]*)_[^-]", "\\1"),
sample= str_replace(sample.list$base_name, "([^_]*_[^_]*_[^_]*)_[^-]", "\\1"))
test <- sample.list %>%
filter(type== "SMP") %>%
group_by(sample) %>%
mutate(select= sample(1:2, 1))
View(test)
sample.list <- read_tsv(file.path(dir_input, "eem_sample_info.txt")) %>%
mutate(replicate= str_extract(.$base_name, "[0-9]$"),
type= str_replace(.$base_name, "[^_]*_[^_]*_([^_]*)_[^-]", "\\1"),
sample= str_replace(sample.list$base_name, "([^_]*_[^_]*_[^_]*)_[^-]", "\\1")) %>%
group_by(sample) %>%
mutate(select= sample(1:2, 1))
View(sample.list)
sample.list <- read_tsv(file.path(dir_input, "eem_sample_info.txt")) %>%
mutate(replicate= str_extract(.$base_name, "[0-9]$"),
type= str_replace(.$base_name, "[^_]*_[^_]*_([^_]*)_[^-]", "\\1"),
sample= str_replace(sample.list$base_name, "([^_]*_[^_]*_[^_]*)_[^-]", "\\1")) %>%
group_by(sample) %>%
mutate(select= sample(1:2, 1)) %>%
ungroup()
sample.list <- read_tsv(file.path(dir_input, "eem_sample_info.txt")) %>%
mutate(replicate= str_extract(.$base_name, "[0-9]$"),
type= str_replace(.$base_name, "[^_]*_[^_]*_([^_]*)_[^-]", "\\1"),
sample= str_replace(sample.list$base_name, "([^_]*_[^_]*_[^_]*)_[^-]", "\\1")) %>%
group_by(sample) %>%
mutate(select= sample(1:2, 1),
count= n()) %>%
ungroup()
View(sample.list)
sample.list$select == sample.list$replicate
which(sample.list$select == sample.list$replicate)
sample.list %>%
filter(count == 2) %>%
filter(select == replicate)
test <- sample.list %>%
filter(count == 2) %>%
filter(select == replicate)
View(test)
test <- sample.list %>%
filter(count == 2)
View(test)
test <- sample.list %>%
filter(count == 2) %>%
filter(select == replicate)
View(test)
sample.list %>%
filter(count == 3)
subset.pseudoreplicates <- sample.list %>%
filter(count == 3) %>%
filter(select == replicate)
source('~/Documents/UC Berkeley/2016 Spring Classes/EEA_DOC/Aqualog_EEMs/Scripts/eem_pseudoreplicate_subset.R', echo=TRUE)
subset.sample.list <- sample.list %>%
filter(count == 1 | count == 3) %>%
full_join(., subset.pseudoreplicates)
View(subset.sample.list)
sample.list %>%
filter(count == 2)
sample.list %>%
filter(count == 2  & sample == "SMP")
sample.list %>%
filter(count == 2 & sample == "SMP")
View(sample.list)
sample.list %>%
filter(count == 2 & type == "SMP")
subset.pseudoreplicates <- sample.list %>%
filter(count == 2 & type == "SMP") %>%
filter(select == replicate)
subset.sample.list <- sample.list %>%
filter(count == 1 | count == 3) %>%
full_join(., subset.pseudoreplicates)
sample.list %>%
filter(count == 1 | count == 3)
subset.pseudoreplicates <- sample.list %>%
filter(count == 2 & type == "SMP") %>%
filter(select == replicate)
sample.list %>%
filter(count == 2 & type == "SMP")
sample.list %>%
filter(count == 2 & type == "SMP") %>%
filter(select == replicate)
subset.pseudoreplicates <- sample.list %>%
filter(count == 2 & type == "SMP") %>%
filter(select == replicate)
View(subset.pseudoreplicates)
subset.sample.list <- sample.list %>%
filter(count == 1 | count == 3)
View(subset.sample.list)
subset.sample.list <- sample.list %>%
filter(count == 1 | count == 3) %>%
full_join(., subset.pseudoreplicates)
View(subset.pseudoreplicates)
subset.sample.list <- sample.list %>%
filter(count == 1 | count == 3) %>%
left_join(., subset.pseudoreplicates)
View(subset.sample.list)
sample.list %>%
filter(count == 2 & type == "SMP")
subset.sample.list <- sample.list %>%
filter(count == 1 | count == 3) %>%
rbind(., subset.pseudoreplicates)
View(subset.sample.list)
sample.list <- read_tsv(file.path(dir_input, "eem_sample_info.txt")) %>%
mutate(replicate= str_extract(.$base_name, "[0-9]$"),
type= as.numeric(str_replace(.$base_name, "[^_]*_[^_]*_([^_]*)_[^-]", "\\1")),
sample= str_replace(sample.list$base_name, "([^_]*_[^_]*_[^_]*)_[^-]", "\\1")) %>%
group_by(sample) %>%
mutate(select= sample(1:2, 1),
count= n()) %>%
ungroup()
sample.list <- read_tsv(file.path(dir_input, "eem_sample_info.txt")) %>%
mutate(replicate= as.numeric(str_extract(.$base_name, "[0-9]$")),
type= str_replace(.$base_name, "[^_]*_[^_]*_([^_]*)_[^-]", "\\1"),
sample= str_replace(sample.list$base_name, "([^_]*_[^_]*_[^_]*)_[^-]", "\\1")) %>%
group_by(sample) %>%
mutate(select= sample(1:2, 1),
count= n()) %>%
ungroup()
subset.pseudoreplicates <- sample.list %>%
filter(count == 2 & type == "SMP") %>%
filter(select == replicate)
subset.sample.list <- sample.list %>%
filter(count == 1 | count == 3) %>%
rbind(., subset.pseudoreplicates)
sample.list %>%
filter(count == 2 & type == "SMP")
sample.list %>%
filter(count == 2 & type == "SMP")
sample.list %>%
filter(count == 2 & type == "SMP") %>%
filter(select == replicate)
280 - 98
sample.list %>%
filter(count == 1 | count == 3)
144 +98
sample.list %>%
filter(count != 2 & type != "SMP")
sample.list %>%
filter(!(count == 2 & type == "SMP"))
280 - 98 + 182
98 + 182
280 - 98
subset.sample.list <- sample.list %>%
filter(!(count == 2 & type == "SMP")) %>%
rbind(., subset.pseudoreplicates)
View(subset.sample.list)
231+49
dir_output <- file.path("/Users", "KeithBG", "Documents", "UC Berkeley", "2016 Spring Classes", "EEA_DOC", "Aqualog_EEMs", "Aqualog_Data")
write_tsv(subset.sample.list, path= file.path(dir_output, "eem_sample_list_subset.txt"))
subset.sample.list <- sample.list %>%
filter(!(count == 2 & type == "SMP")) %>%
rbind(., subset.pseudoreplicates) %>%
select(-type, -select)
View(subset.sample.list)
subset.sample.list <- sample.list %>%
filter(!(count == 2 & type == "SMP")) %>%
rbind(., subset.pseudoreplicates) %>%
select(-type, -select, -replicate, -sample, -count)
View(subset.sample.list)
write_tsv(subset.sample.list, path= file.path(dir_output, "eem_sample_list_subset.txt"))
## ...
## Script created April 2018 by KBG
#### LIBRARIES ################################################################
library(tidyverse)
library(stringr)
###############################################################################
#### FILEPATHS ################################################################
dir_input <- file.path("/Users", "KeithBG", "Documents", "UC Berkeley", "2016 Spring Classes", "EEA_DOC", "Aqualog_EEMs", "Aqualog_Data")
#dir_input_eems <- file.path("/Users", "KeithBG", "Documents", "UC Berkeley", "2016 Spring Classes", "EEA_DOC", "Aqualog_EEMs", "Aqualog_Data", "EEMs_EX_3nm")
dir_output <- file.path("/Users", "KeithBG", "Documents", "UC Berkeley", "2016 Spring Classes", "EEA_DOC", "Aqualog_EEMs", "Aqualog_Data")
###############################################################################
#### GET FILENAMES OF ALL PROCESSED CONTOUR .DAT FILES
file.names <- list.files(pattern="*-ProcessedContour_IFE_RM_NRM.dat", path= dir_input_eems, full.names= TRUE)
#sampleID <- str_replace(list.files(pattern="*-ProcessedContour_IFE_RM_NRM.dat", path= dir_input_eems)[1], "-.+$", "")
#### READ IN SAMPLE LIST AND GAIN RATIO INFORMATION
sample.list <- read_tsv(file.path(dir_input, "eem_sample_info.txt")) %>%
mutate(replicate= as.numeric(str_extract(.$base_name, "[0-9]$")),
type= str_replace(.$base_name, "[^_]*_[^_]*_([^_]*)_[^-]", "\\1"),
sample= str_replace(sample.list$base_name, "([^_]*_[^_]*_[^_]*)_[^-]", "\\1")) %>%
group_by(sample) %>%
# Use "sample" command to randomly select rep 1 or 2
mutate(select= sample(1:2, 1),
count= n()) %>%
ungroup()
## Randomly select 1 of the 2 water sample replicates
subset.pseudoreplicates <- sample.list %>%
filter(count == 2 & type == "SMP") %>%
filter(select == replicate)
## Combine the data sets together
subset.sample.list <- sample.list %>%
filter(!(count == 2 & type == "SMP")) %>%
rbind(., subset.pseudoreplicates) %>%
select(-type, -select, -replicate, -sample, -count)
## ...
## Script created April 2018 by KBG
#### LIBRARIES ################################################################
library(tidyverse)
library(stringr)
###############################################################################
#### FILEPATHS ################################################################
dir_input <- file.path("/Users", "KeithBG", "Documents", "UC Berkeley", "2016 Spring Classes", "EEA_DOC", "Aqualog_EEMs", "Aqualog_Data")
#dir_input_eems <- file.path("/Users", "KeithBG", "Documents", "UC Berkeley", "2016 Spring Classes", "EEA_DOC", "Aqualog_EEMs", "Aqualog_Data", "EEMs_EX_3nm")
dir_output <- file.path("/Users", "KeithBG", "Documents", "UC Berkeley", "2016 Spring Classes", "EEA_DOC", "Aqualog_EEMs", "Aqualog_Data")
###############################################################################
sample.list <- read_tsv(file.path(dir_input, "eem_sample_info.txt")) %>%
mutate(replicate= as.numeric(str_extract(.$base_name, "[0-9]$")),
type= str_replace(.$base_name, "[^_]*_[^_]*_([^_]*)_[^-]", "\\1"),
sample= str_replace(sample.list$base_name, "([^_]*_[^_]*_[^_]*)_[^-]", "\\1")) %>%
group_by(sample) %>%
# Use "sample" command to randomly select rep 1 or 2
mutate(select= sample(1:2, 1),
count= n()) %>%
ungroup()
sample.list <- read_tsv(file.path(dir_input, "eem_sample_info.txt")) %>%
mutate(replicate= as.numeric(str_extract(.$base_name, "[0-9]$")),
type= str_replace(.$base_name, "[^_]*_[^_]*_([^_]*)_[^-]", "\\1"),
sample= str_replace(.$base_name, "([^_]*_[^_]*_[^_]*)_[^-]", "\\1")) %>%
group_by(sample) %>%
# Use "sample" command to randomly select rep 1 or 2
mutate(select= sample(1:2, 1),
count= n()) %>%
ungroup()
## ...
## Script created April 2018 by KBG
#### LIBRARIES ################################################################
library(tidyverse)
library(stringr)
###############################################################################
#### FILEPATHS ################################################################
dir_input <- file.path("/Users", "KeithBG", "Documents", "UC Berkeley", "2016 Spring Classes", "EEA_DOC", "Aqualog_EEMs", "Aqualog_Data")
#dir_input_eems <- file.path("/Users", "KeithBG", "Documents", "UC Berkeley", "2016 Spring Classes", "EEA_DOC", "Aqualog_EEMs", "Aqualog_Data", "EEMs_EX_3nm")
dir_output <- file.path("/Users", "KeithBG", "Documents", "UC Berkeley", "2016 Spring Classes", "EEA_DOC", "Aqualog_EEMs", "Aqualog_Data")
###############################################################################
#### GET FILENAMES OF ALL PROCESSED CONTOUR .DAT FILES
#file.names <- list.files(pattern="*-ProcessedContour_IFE_RM_NRM.dat", path= dir_input_eems, full.names= TRUE)
#sampleID <- str_replace(list.files(pattern="*-ProcessedContour_IFE_RM_NRM.dat", path= dir_input_eems)[1], "-.+$", "")
#### READ IN SAMPLE LIST AND GAIN RATIO INFORMATION
sample.list <- read_tsv(file.path(dir_input, "eem_sample_info.txt")) %>%
mutate(replicate= as.numeric(str_extract(.$base_name, "[0-9]$")),
type= str_replace(.$base_name, "[^_]*_[^_]*_([^_]*)_[^-]", "\\1"),
sample= str_replace(.$base_name, "([^_]*_[^_]*_[^_]*)_[^-]", "\\1")) %>%
group_by(sample) %>%
# Use "sample" command to randomly select rep 1 or 2
mutate(select= sample(1:2, 1),
count= n()) %>%
ungroup()
## Randomly select 1 of the 2 water sample replicates
subset.pseudoreplicates <- sample.list %>%
filter(count == 2 & type == "SMP") %>%
filter(select == replicate)
subset.sample.list <- sample.list %>%
filter(!(count == 2 & type == "SMP")) %>%
rbind(., subset.pseudoreplicates) %>%
select(-type, -select, -replicate, -sample, -count)
write_tsv(subset.sample.list, path= file.path(dir_output, "eem_sample_list_subset.txt"))
library(tidyverse)
library(ggplot2)
dir_input_eems <- file.path("/Users", "KeithBG", "Documents", "UC Berkeley", "2016 Spring Classes", "EEA_DOC", "Aqualog_EEMs", "Aqualog_Data")
dir_input_eems <- file.path("/Users", "KeithBG", "Documents", "UC Berkeley", "2016 Spring Classes", "EEA_DOC", "Aqualog_EEMs", "Aqualog_Data", "EEMs_Raw")
dir_output <- file.path("/Users", "KeithBG", "Documents", "UC Berkeley", "2016 Spring Classes", "EEA_DOC", "Aqualog_EEMs", "Aqualog_Data", "Summary_Data")
dirs.sample <- list.dirs(dir_input_eems, recursive = FALSE)
file.names <- as.character(NULL)
for(folder in seq(1:length(dirs.sample))){
file_path <- file.path(dirs.sample[folder], "data_export")
file.names <- c(file.names, list.files(pattern="*Processed Contour_ IFE_RM_NRM.dat", path= file_path, full.names= TRUE))
}
file.names
eem.df <- read_table2(file.path(dir_output, "eem_rounded.tsv"))
ex.df <- read_table2(file.path(dir_output, "ex.df.tsv"))
em.df <- read_table2(file.path(dir_output, "em.df.tsv"))
ggplot(ex.df, aes(x= ex.uq)) +
geom_histogram() +
theme_bw()
ggplot(em.df, aes(x= em.uq)) +
geom_histogram() +
theme_bw()
em.min.max <- em.df %>%
group_by(sampleID) %>%
summarize(em.min= min(em.uq),
em.max= max(em.uq))
em.min.max %>%
count(em.min)
ex.df
## Script to make corrections to Z values based on the gain ratio
## I collected EEMs with medium and low gain, so Z values need to be
## adjusted depending on the gain settings.
## All samples will be standardized to low gain
## This script implements the gain ratio calcuated in the
## eem_gain_ratio.R script
## Also corrects for dilutions in the end member samples
## Script writes new EEM files to the <dir_output_eems> folder
## Script created Apr 2018 by KBG
#### LIBRARIES ################################################################
library(tidyverse)
library(stringr)
###############################################################################
#### FILEPATHS ################################################################
dir_input <- file.path("/Users", "KeithBG", "Documents", "UC Berkeley", "2016 Spring Classes", "EEA_DOC", "Aqualog_EEMs", "Aqualog_Data")
dir_input_eems <- file.path("/Users", "KeithBG", "Documents", "UC Berkeley", "2016 Spring Classes", "EEA_DOC", "Aqualog_EEMs", "Aqualog_Data", "EEMs_EX_3nm")
dir_output_eems <- file.path("/Users", "KeithBG", "Documents", "UC Berkeley", "2016 Spring Classes", "EEA_DOC", "Aqualog_EEMs", "Aqualog_Data", "EEMS_EX_3nm_corrected")
###############################################################################
#### GET FILENAMES OF ALL PROCESSED CONTOUR .DAT FILES
file.names <- list.files(pattern="*-ProcessedContour_IFE_RM_NRM.dat", path= dir_input_eems, full.names= TRUE)
#sampleID <- str_replace(list.files(pattern="*-ProcessedContour_IFE_RM_NRM.dat", path= dir_input_eems)[1], "-.+$", "")
#### READ IN SAMPLE LIST, GAIN RATIO INFORMATION, AND DILUTION INFORMATION
sample.list <- read_tsv(file.path(dir_input, "eem_sample_info.txt"))
source("/Users/KeithBG/Documents/UC Berkeley/2016 Spring Classes/EEA_DOC/Aqualog_EEMs/Scripts/eem_gain_ratio.R")
gain.med.low.ratio <- calculate.gain.ratio()
dilute.df <- read_tsv(file.path(dir_input, "EM_dilutions.txt"))
#### LOOP TO CORRECT Z VALUES ACCORDING TO DILUTION AND GAIN SETTINGS
for(file in seq(1:length(file.names))){
## Read in file and extract gain setting information
eem.df <-   read_tsv(file.names[file],
col_types = cols(
ex= col_double(),
em= col_double(),
z= col_double()))
sampleID <- str_replace(list.files(pattern="*-ProcessedContour_IFE_RM_NRM.dat", path= dir_input_eems)[file], "-.+$", "")
gain.info <- sample.list %>%
filter(base_name == sampleID)
## Calculate dilution factor
if(sampleID %in% dilute.df$base_name){
dilution.factor <- pull(dilute.df %>%
filter(base_name == sampleID) %>%
select(dilution))
} else {
dilution.factor <- 1
}
## Divide by dilution factor
eem.df$z <- eem.df$z / dilution.factor
## Sample gain= medium
## divide Z by ratio b/c medium gain is more sensitve, overestimating fluorescence
if(gain.info$samp_gain == "med"){
eem.df$z <- eem.df$z / gain.med.low.ratio
}
## Int. gain= medium & sample gain= low
## multiply by ratio b/c divided Z values by too large a number
if(gain.info$int_gain == "med" & gain.info$samp_gain == "low"){
eem.df$z <- eem.df$z * gain.med.low.ratio
}
## Write new .dat file
file_name <- str_c(sampleID, "-ProcessedContour_IFE_RM_NRM.dat")
write_tsv(eem.df, path= file.path(dir_output_eems, file_name))
}
#### FILEPATHS ################################################################
dir_input <- file.path("/Users", "kbg", "Documents", "UC_Berkeley", "EEA_DOC", "Aqualog_EEMs", "PARAFAC_KBG", "Aqualog_Data")
#### LIBRARIES ################################################################
library(tidyverse)
#### READ IN SAMPLE LIST AND CREATE DATA FRAME OF UNIQUE INTEGRATION AREAS
gain.data <- read_tsv(file.path(dir_input, "aqualog_gain_data.txt"))
#### FILEPATHS ################################################################
dir_input <- file.path("/Users", "kbg", "Documents", "UC_Berkeley", "EEA_DOC", "Aqualog_EEMs", "PARAFAC_KBG")
#### READ IN SAMPLE LIST AND CREATE DATA FRAME OF UNIQUE INTEGRATION AREAS
gain.data <- read_tsv(file.path(dir_input, "aqualog_gain_data.txt"))
source("/Users/kbg/Documents/UC_Berkeley/EEA_DOC/Aqualog_EEMs/PARAFAC_KBG/Scripts/eem_gain_ratio.R")
#### FILEPATHS ################################################################
dir_input <- file.path("/Users", "kbg", "Documents", "UC_Berkeley", "EEA_DOC", "Aqualog_EEMs", "PARAFAC_KBG")
#### READ IN SAMPLE LIST AND GAIN RATIO INFORMATION
sample.list <- read_tsv(file.path(dir_input, "eem_sample_info.txt")) %>%
mutate(replicate= as.numeric(str_extract(.$base_name, "[0-9]$")),
type= str_replace(.$base_name, "[^_]*_[^_]*_([^_]*)_[^-]", "\\1"),
sample= str_replace(.$base_name, "([^_]*_[^_]*_[^_]*)_[^-]", "\\1")) %>%
group_by(sample) %>%
# Use "sample" command to randomly select rep 1 or 2
mutate(select= sample(1:2, 1),
count= n()) %>%
ungroup()
file.path("/Users", "kbg", "Documents", "UC_Berkeley", "EEA_DOC", "Aqualog_EEMs", "PARAFAC_KBG")
